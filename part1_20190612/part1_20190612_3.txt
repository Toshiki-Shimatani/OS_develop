// -----------------------------------------------------------------
//  Author  : Shimatani Toshiki <shimatani@swlab.cs.okayama-u.ac.jp>
//  Make_Date   : 2019/06/12 21:00:44
//  Update_Date : 2019/06/28 21:52:42
//  Filename: part1_20190612_3.txt
// -----------------------------------------------------------------

"part1_20190612_2.txt"にて，レジスタやセグメントに関して説明をした．
それを踏まえて，boot_1.1.asm の内容をもう一度見てみる．

ここからは，コード中でどのようにセグメントが使用されているかを確認していく．
まずは，コードセグメントから確認する．

14行目の"ORG    0x7C00"に注目する．これはこのプログラムが 0x7C00から始まることを意味し，
プログラム中のベースアドレスをオペランドの値(0x7C00)に設定する命令だった．

では19行目の"JMP   BOOT"はどこに配置されるのだろうか．答えはメモリ上の0x7C00番地である．
これは，JMP命令がこのプログラムの0番目の命令であるため，0x7C00(ベースアドレス) + 0 より　0x7C00 番地に配置されるのである．

コードセグメントレジスタ(CS)はあくまでセグメント領域の開始地点が格納されているだけである．
このため，単体ではセグメント領域の任意のアドレスへアクセスすることができない．
したがって，セグメント領域のオフセットを表すレジスタが必要となってくる．(オフセットとは，セグメント領域内のアドレスのことである)
これが，"part1_20190612_2.txt"中のレジスタの特殊汎用レジスタの説明中にあったインストラクションポインタ(IP)である．
インストラクションポインタ(IP)の値はユーザ(プログラマ)が書き換える必要はない．ハードウェアが自動で加減算を行い，IPの値を書き換えるためである．
しかし，プログラムがどこにあるかはコードセグメントを使って示す必要があるため，ユーザ(プログラマ)はプログラムがある場所に対して
適切にコードセグメント領域を設定することを意識しなければならない．

次にデータセグメントを確認する．
特に操作を行っていないため，データセグメントには0x0000が格納されている．このため，データセグメント領域の開始地点は0x00000となる．

